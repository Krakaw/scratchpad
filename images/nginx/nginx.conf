server {
    listen 80;
    server_name ~^control.(.*)$;
    location / {
        index index.html;
        root /controller/deployer/public;
        sub_filter '__CONTROLLER_HOST__' '$scheme://$http_host';
        sub_filter_once off;
        try_files $uri $uri/ @backend;
    }
    location @backend {
        proxy_pass http://controller:3000;
    }
}

server {
    listen 80;
    server_name ~^(?<subdomain>.+?)\..*$;
    set $scratch_root /controller/releases/$subdomain;

    access_log /controller/logs/nginx-access.log;
    error_log /controller/logs/nginx-error.log debug;#debug/warn/crit

    error_page 404 500 502 503 504 /building.html;
    location = /building.html {
        root $scratch_root/web;
        internal;
    }

    location = /rauthy {
        internal;
        proxy_pass                          http://rauthy:3031$request_uri;
        proxy_pass_request_body             off;
        proxy_set_header                    Content-Length "";
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass_request_headers          on;
    }

    location /api {
        auth_request /rauthy;
        allow all;
        satisfy any;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-User $remote_user;
        rewrite ^/api/?(.*) /$1 break;
        proxy_pass http://unix:$scratch_root/socks/api.sock;
    }

    location /logs {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://unix:$scratch_root/socks/logs.sock;
    }

    location /log-files/ {
        auth_request /rauthy;
        alias $scratch_root/logs/;
        autoindex on;
    }

    location / {
        auth_request /rauthy;
        include  /etc/nginx/mime.types;
        types {
            application/wasm                      wasm;
        }
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'X-Api-Client-Version,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        if ($request_method = 'OPTIONS') {

            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        root $scratch_root/web/build;
        try_files $uri $uri/ /index.html =404;
    }
}
